<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Screen Recorder</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f4f6f9;
            color: #333;
        }
        .container {
            max-width: 900px;
            margin-top: 50px;
            background-color: #ffffff;
            border-radius: 10px;
            padding: 40px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            font-weight: 600;
            color: #2b3a55;
            margin-bottom: 30px;
        }
        .btn-lg {
            padding: 12px 30px;
            font-size: 18px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        .btn-success {
            background-color: #2ecc71;
            border: none;
        }
        .btn-success:hover {
            background-color: #27ae60;
        }
        .btn-danger {
            background-color: #e74c3c;
            border: none;
        }
        .btn-danger:hover {
            background-color: #c0392b;
        }
        .btn-info {
            background-color: #3498db;
            border: none;
        }
        .btn-info:hover {
            background-color: #2980b9;
        }
        .video-container {
            text-align: center;
            margin-top: 30px;
        }
        video {
            width: 100%;
            max-width: 100%;
            height: auto;
            border-radius: 10px;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.15);
        }
        .link-container {
            margin-top: 20px;
        }
        .link-container a {
            margin: 10px;
            font-size: 16px;
            padding: 12px 30px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        .link-container a:hover {
            opacity: 0.8;
        }
        .loading-spinner {
            display: none;
            width: 50px;
            height: 50px;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            animation: spin 2s linear infinite;
            margin: 0 auto;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Screen Recorder</h1>
        <div class="text-center">
            <button id="startBtn" class="btn btn-success btn-lg">Start Recording</button>
            <button id="stopBtn" class="btn btn-danger btn-lg" disabled>Stop Recording</button>
        </div>

        <div class="video-container mt-5">
            <video id="recordedVideo" controls></video>
        </div>

        <div class="link-container text-center mt-4">
            <a id="downloadLink" class="btn btn-primary btn-lg" style="display:none;" download="recorded-video.webm">Download Recorded Video</a>
            <a id="viewLink" class="btn btn-info btn-lg" style="display:none;" target="_blank">View Recorded Video Online</a>
        </div>

        <div class="text-center mt-4">
            <div class="loading-spinner" id="loadingSpinner"></div>
        </div>
    </div>

    <script>
        const startBtn = document.getElementById('startBtn');
        const stopBtn = document.getElementById('stopBtn');
        const videoElement = document.getElementById('recordedVideo');
        const downloadLink = document.getElementById('downloadLink');
        const viewLink = document.getElementById('viewLink');
        const loadingSpinner = document.getElementById('loadingSpinner');
        let mediaRecorder;
        let chunks = [];

        startBtn.addEventListener('click', async () => {
            const stream = await navigator.mediaDevices.getDisplayMedia({ video: true });
            mediaRecorder = new MediaRecorder(stream);

            mediaRecorder.ondataavailable = (event) => {
                chunks.push(event.data);
            };

            mediaRecorder.onstop = async () => {
                const blob = new Blob(chunks, { type: 'video/webm' });
                chunks = [];
                const videoURL = URL.createObjectURL(blob);
                videoElement.src = videoURL;

                // download and view links
                downloadLink.href = videoURL;
                downloadLink.style.display = 'block';
                viewLink.href = videoURL;
                viewLink.style.display = 'block';
            };

            mediaRecorder.start();
            startBtn.disabled = true;
            stopBtn.disabled = false;
            loadingSpinner.style.display = 'block';
        });

        stopBtn.addEventListener('click', () => {
            mediaRecorder.stop();
            startBtn.disabled = false;
            stopBtn.disabled = true;
            loadingSpinner.style.display = 'none';
        });
    </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
